#------------------------------------------------------------------------------------------------------------------------
#
# To create PATTuple using CRAB
#
# 1. Configure this file
# 2. Create a valid proxy: voms-proxy-init -valid 196:00
# 3. Create jobs: multicrab -create
# 4. Submit jobs: multicrab -submit
# 5. Check the status: multicrab -status (When using sge you may also check the status by typing: qstat -u UserName) 
# 6. When jobs are in state 'Done': crab -getoutput [list of jobs] -c Summer11/TTJets_TuneZ2_v2
# 7. To resubmit failed jobs: crab -resubmit [list of jobs] -c Summer11/TTJets_TuneZ2_v2
# 8. To publish samples at DBS: crab -publish -c Summer11/TTJets_TuneZ2_v2
#
# In case of questions: crab --help
#
#------------------------------------------------------------------------------------------------------------------------

[MULTICRAB]

# If the sample is not stored at DESY you have to use glite as scheduler
#cfg = ../../../TopAnalysis/Configuration/analysis/fullHadronic/crab_glite.cfg

# If the sample is stored at DESY you can also use sge. If you use sge comment out the line above and comment in the line below
cfg = ../../../TopAnalysis/Configuration/analysis/fullHadronic/crab_sge.cfg

[COMMON]
CRAB.use_server   = 0
USER.publish_data = 1
USER.dbs_url_for_publication=https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_02_writer/servlet/DBSServlet
USER.check_user_remote_dir = 0

CMSSW.pset           = ./SUSYPAT_MC_cfg.py
CMSSW.output_file    = Summer11.root

USER.publish_data_name = SUSYPAT
USER.return_data       = 0
USER.copy_data         = 1

CMSSW.total_number_of_events = -1
#CMSSW.total_number_of_lumis = -1

## To figure out at which sites the dataset in question is available, type e.g.
## dbs search --query="find dataset, site where dataset=*TTJets*Summer11*AOD*"

[Summer11/QCD_Pt-15to3000_TuneZ2_Flat]
CMSSW.datasetpath  = /QCD_Pt-15to3000_TuneZ2_Flat_7TeV_pythia6/Summer11-PU_S3_START42_V11-v2/AODSIM
GRID.se_white_list = dcache-se-cms.desy.de
CMSSW.events_per_job = 50000

