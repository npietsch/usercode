#------------------------------------------------------------------------------------------------------------------------
#
# To create PATTuple using CRAB
#
# 1. Configure this file
# 2. Create a valid proxy: voms-proxy-init -valid 196:00
# 3. Create jobs: multicrab -create
# 4. Submit jobs: multicrab -submit
# 5. Check the status: multicrab -status (When using sge you may also check the status by typing: qstat -u UserName) 
# 6. When jobs are in state 'Done': crab -getoutput [list of jobs] -c Summer11/MuHadMay10ReReco
# 7. To resubmit failed jobs: crab -resubmit [list of jobs] -c Summer11/MuHadMay10ReReco
# 8. To publish samples at DBS: crab -publish -c Summer11/MuHadMay10ReReco
#
# In case of questions: crab --help
#
#------------------------------------------------------------------------------------------------------------------------

[MULTICRAB]

# If the sample is not stored at DESY you have to use glite as scheduler
cfg = ../../../TopAnalysis/Configuration/analysis/fullHadronic/crab_glite.cfg

# If the sample is stored at DESY you can also use sge. If you use sge comment out the line above and comment in the line below
#cfg = ../../../../TopAnalysis/Configuration/analysis/fullHadronic/crab_sge.cfg

[COMMON]

#CRAB.use_server   = 1
use_server   = 0
USER.publish_data = 0
USER.dbs_url_for_publication=https://cmsdbsprod.cern.ch:8443/cms_dbs_ph_analysis_02_writer/servlet/DBSServlet
USER.check_user_remote_dir = 0

CMSSW.pset           = ./SusyPAT_cfg.py
CMSSW.output_file    = Upgrade.root

CMSSW.total_number_of_events = -1
#CMSSW.total_number_of_lumis = -1

USER.publish_data_name = SLHC_Upgrade 
USER.return_data       = 0
USER.copy_data         = 1

## To figure out at which sites the dataset in question is available, type e.g.
## dbs search --query="find dataset, site where dataset=/MuHad*May10*"

[UpgradeNew/SLHC_TTbar_PhI]
CMSSW.datasetpath =/PYTHIA6_Tauola_TTbar_TuneZ2star_14TeV/Summer12-UpgradePhase1_DR428-PU50-DESIGN42_V17S-v1/GEN-SIM-DIGI-RECO
USER.publish_data_name = SLHC_TTbar_PhI
GRID.se_white_list = T2_CH_CERN
#CMSSW.events_per_job = 10000
#CMSSW.lumi_mask = Cert_160404-180252_7TeV_PromptReco_Collisions11_JSON.txt
#CMSSW.lumis_per_job = 50
CMSSW.events_per_job = 3000

[UpgradeNew/SLHC_Zmumu_PhI]
CMSSW.datasetpath =/DYToMuMu_M_20_TuneZ2star_14TeV_pythia6/Summer12-UpgradePhase1_DR428-PU50-DESIGN42_V17S-v1/GEN-SIM-DIGI-RECO
USER.publish_data_name = SLHC_Zmumu_PhI
GRID.se_white_list = T2_CH_CERN
#CMSSW.events_per_job = 10000
#CMSSW.lumi_mask = Cert_160404-180252_7TeV_PromptReco_Collisions11_JSON.txt
#CMSSW.lumis_per_job = 50
CMSSW.events_per_job = 1000

[UpgradeNew/SLHC_LM6_PhI]
CMSSW.datasetpath =/PYTHIA6_SUSY_LM6_sftsht_14TeV/Summer12-UpgradePhase1_DR428-PU50-DESIGN42_V17S-v1/GEN-SIM-DIGI-RECO
USER.publish_data_name = SLHC_LM6_PhI
GRID.se_white_list = T2_CH_CERN
#CMSSW.events_per_job = 10000
#CMSSW.lumi_mask = Cert_160404-180252_7TeV_PromptReco_Collisions11_JSON.txt
#CMSSW.lumis_per_job = 50
CMSSW.events_per_job = 500

[UpgradeNew/SLHC_LM9_PhI]
CMSSW.datasetpath =/PYTHIA6_SUSY_LM9_sftsht_14TeV/Summer12-UpgradePhase1_DR428-PU50-DESIGN42_V17S-v1/GEN-SIM-DIGI-RECO
USER.publish_data_name = SLHC_LM9_PhI
GRID.se_white_list = T2_CH_CERN
#CMSSW.events_per_job = 10000
#CMSSW.lumi_mask = Cert_160404-180252_7TeV_PromptReco_Collisions11_JSON.txt
#CMSSW.lumis_per_job = 50
CMSSW.events_per_job = 500
